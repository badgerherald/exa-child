$base-font-size: 15px;
$base-line-height: 21px;

@function flex($pixels, $base) {
    @return percentage(($pixels / $base));
}

@function em($px, $base: 15) {
    @return ($px / $base) * 1em;
}

/*  Fonts */
$headline:  'PT Sans Narrow', Helvetica, Arial, Sans-Serif;
$body:      'Noto Serif', Oalatino, Georgia, Serif;
$caption:   open sans, helvetica, arial, sans-serif;
$icon:      exa;

/** v0.3.5 colors â€” preferred use. 
 * (modifier)colorObjectOnBackgroundcolorAction 
 * lightblueLinkOnBrownHover 
 */

//blues
$blue: #3c74b9;
$blueLinkHover: #3a97f7;
$darkblue: #195ea6;

//greys
$grey: #eff4f6;
$greyBorder: #c7d0d5;
$greyText: #a6b5bd;
$greyBorderOnBlack: #262626;
$greyTextOnBlack: #5c5c5c;
$lightgrey: #f5f2f2;
$lightgreyOnWhite: #ededed;
$darkgrey: #2c2c2c;
$darkgreyBorder: #e0eaee;
$darkgreyHover: #7e8c93;

$black: #191919;
$white: #ffffff;
$red: #c81212;




@mixin transition($prop, $time, $fn, $delay:0ms) {
    -webkit-transition: $prop $time $fn $delay;
    -moz-transition: $prop $time $fn $delay;
    -o-transition: $prop $time $fn $delay;
    transition: $prop $time $fn $delay;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// generic transform
@mixin transform($transforms) {
       -moz-transform: $transforms;
         -o-transform: $transforms;
        -ms-transform: $transforms;
    -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
     @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
         -o-transform-origin: $origin;
        -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
          transform-origin: $origin;
}



/**
 * Mixin for breakpoints.
 */
@mixin breakpoint($breakpoint) {
 
  @if $breakpoint == "tablet" {
    @media (min-width: 760px) {
      @content;
    }
  }
 
  @else if $breakpoint == "desktop" {
    @media (min-width: 1060px) {
      @content;
    }
  }

  @else if $breakpoint == "xl" {
    @media (min-width: 1220px) {
      @content;
    }
  }
}
